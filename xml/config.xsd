<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- edited with XMLSpy v2005 rel. 3 U (http://www.altova.com) by FT (FT) -->
<!--W3C Schema generated by XMLSpy v2005 rel. 3 U (http://www.altova.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:jxb="http://java.sun.com/xml/ns/jaxb" elementFormDefault="qualified" jxb:version="2.0">
	<!--=== Definition of simple types ===-->
	<xs:complexType name="empty-type">
		<xs:annotation>
			<xs:documentation>Used for empty elements</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:simpleType name="wByte">
		<xs:annotation>
			<xs:appinfo>
				<jxb:javaType name="byte"/>
			</xs:appinfo>
			<xs:documentation>wide Byte: unsigned and signed allowed</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:short">
			<xs:minInclusive value="-128"/>
			<xs:maxInclusive value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="wShort">
		<xs:annotation>
			<xs:appinfo>
				<jxb:javaType name="short"/>
			</xs:appinfo>
			<xs:documentation>wide Short:  unsigned and signed allowed</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:int">
			<xs:minInclusive value="-32768"/>
			<xs:maxInclusive value="65535"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="inet-address">
		<xs:annotation>
			<xs:appinfo>
				<jxb:javaType name="java.net.InetAddress" parseMethod="org.dhcpcluster.config.xml.Util.parseInetAddress" printMethod="org.dhcpcluster.config.xml.Util.printInetAddress"/>
			</xs:appinfo>
			<xs:documentation>InetAddress Java mapping</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:pattern value="((\d)|(\d\d)|([01]\d\d)|(2[0-4]\d)|(25[0-5]))\.((\d)|(\d\d)|([01]\d\d)|(2[0-4]\d)|(25[0-5]))\.((\d)|(\d\d)|([01]\d\d)|(2[0-4]\d)|(25[0-5]))\.((\d)|(\d\d)|([01]\d\d)|(2[0-4]\d)|(25[0-5]))"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="stype-option-mode">
		<xs:annotation>
			<xs:appinfo>
				<jxb:typesafeEnumClass name="OptionMode"/>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="replace"/>
			<xs:enumeration value="concat"/>
			<xs:enumeration value="regex"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="string-item">
		<xs:annotation>
			<xs:appinfo>
				<jxb:javaType name="String" parseMethod="org.dhcpcluster.config.xml.Util.parseStringItem" printMethod="org.dhcpcluster.config.xml.Util.printStringItem"/>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<!--=== Root element ===-->
	<xs:element name="dhcp-server">
		<xs:complexType>
			<xs:all>
				<xs:element name="front-end">
					<xs:complexType>
						<xs:all>
							<xs:element name="listen" minOccurs="0">
								<xs:complexType>
									<xs:attribute name="port" type="xs:unsignedShort" use="optional" default="67"/>
									<xs:attribute name="inet" type="inet-address" use="optional" default="127.0.0.1"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="threads" minOccurs="0">
								<xs:complexType>
									<xs:attribute name="nb" use="optional" default="2">
										<xs:simpleType>
											<xs:restriction base="xs:int">
												<xs:minInclusive value="1"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="max" use="optional" default="10">
										<xs:simpleType>
											<xs:restriction base="xs:int">
												<xs:minInclusive value="1"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="core" use="optional" default="2">
										<xs:simpleType>
											<xs:restriction base="xs:int">
												<xs:minInclusive value="1"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="keepalive" use="optional" default="10000">
										<xs:simpleType>
											<xs:restriction base="xs:int">
												<xs:minInclusive value="0"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
							<xs:element name="jdbc" minOccurs="0">
								<xs:complexType>
									<xs:complexContent>
										<xs:extension base="empty-type">
											<xs:attribute name="url" type="xs:string" use="required"/>
											<xs:attribute name="user" type="xs:string" use="required"/>
											<xs:attribute name="password" type="xs:string" use="required"/>
										</xs:extension>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="back-end">
					<xs:complexType/>
				</xs:element>
				<xs:element name="global">
					<xs:complexType>
						<xs:all>
							<xs:element name="server">
								<xs:complexType>
									<xs:attribute name="identifier" type="inet-address" use="required"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="server-policy" type="policyType"/>
						</xs:all>
					</xs:complexType>
				</xs:element>
				<xs:element name="topology">
					<xs:complexType>
						<xs:choice minOccurs="0" maxOccurs="unbounded">
							<xs:element ref="node"/>
							<xs:element ref="subnet"/>
						</xs:choice>
					</xs:complexType>
				</xs:element>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<xs:element name="giaddr">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="10.11.12.13"/>
				<xs:enumeration value="10.11.13.15"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="option">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="option-generic">
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element ref="value-byte"/>
						<xs:element ref="value-short"/>
						<xs:element ref="value-int"/>
						<xs:element ref="value-inet"/>
						<xs:element ref="value-rawhex"/>
						<xs:element ref="value-raw64"/>
						<xs:element ref="value-string"/>
						<xs:element ref="value-string-element"/>
					</xs:choice>
					<xs:attribute name="code" type="wByte" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="options" type="optionsType">
		<xs:annotation>
			<xs:documentation>List of options to send to client</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!--=== option value elements ===-->
	<xs:element name="mirror" type="empty-type">
		<xs:annotation>
			<xs:documentation>mirror flag, empty element</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="value-byte" type="wByte"/>
	<xs:element name="value-short" type="wShort"/>
	<xs:element name="value-int" type="xs:int"/>
	<xs:element name="value-inet" type="inet-address"/>
	<xs:element name="value-rawhex" type="xs:hexBinary"/>
	<xs:element name="value-raw64" type="xs:base64Binary"/>
	<xs:element name="value-string" type="xs:string"/>
	<xs:element name="value-string-element">
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:maxLength value="255"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<!--=== option container ===-->
	<xs:complexType name="option-generic">
		<xs:attribute name="mirror" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<xs:group name="group-option-inets">
		<xs:choice>
			<xs:element name="option-time-servers" type="type-option-inets" minOccurs="0"/>
			<xs:element name="option-routers" type="type-option-inets" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="group-option-inet">
		<xs:choice>
			<xs:element name="option-subnet-mask" type="type-option-inet" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="group-option-bytes">
		<xs:choice>
			<xs:element name="option-dhcp-parameter-request-list" type="type-option-bytes" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="group-option-byte">
		<xs:choice>
			<xs:element name="option-ip-forwarding" type="type-option-byte" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="group-option-int">
		<xs:choice>
			<xs:element name="option-time-offset" type="type-option-int" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="group-option-short">
		<xs:choice>
			<xs:element name="option-boot-size" type="type-option-short" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="group-option-shorts">
		<xs:choice>
			<xs:element name="option-path-mtu-plateau-table" type="type-option-shorts" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="group-option-string">
		<xs:choice>
			<xs:element name="option-host-name" type="type-option-string" minOccurs="0"/>
			<xs:element name="option-domain-name" type="type-option-string" minOccurs="0"/>
			<xs:element name="option-dhcp-message" type="type-option-string" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<!--=== option containers by allowed types ===-->
	<xs:complexType name="type-option-inets">
		<xs:complexContent>
			<xs:extension base="option-generic">
				<xs:sequence maxOccurs="unbounded">
					<xs:element ref="value-inet"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="type-option-inet">
		<xs:complexContent>
			<xs:extension base="option-generic">
				<xs:sequence>
					<xs:element ref="value-inet"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="type-option-bytes">
		<xs:complexContent>
			<xs:extension base="option-generic">
				<xs:choice maxOccurs="unbounded">
					<xs:element ref="value-byte"/>
					<xs:element ref="value-rawhex"/>
					<xs:element ref="value-raw64"/>
					<xs:element ref="value-string"/>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="type-option-byte">
		<xs:complexContent>
			<xs:extension base="option-generic">
				<xs:sequence>
					<xs:element ref="value-byte"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="type-option-int">
		<xs:complexContent>
			<xs:extension base="option-generic">
				<xs:sequence>
					<xs:element ref="value-int"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="type-option-short">
		<xs:complexContent>
			<xs:extension base="option-generic">
				<xs:sequence>
					<xs:element ref="value-short"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="type-option-shorts">
		<xs:complexContent>
			<xs:extension base="option-generic">
				<xs:choice maxOccurs="unbounded">
					<xs:element ref="value-short"/>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="type-option-string">
		<xs:complexContent>
			<xs:extension base="option-generic">
				<xs:choice>
					<xs:element ref="value-string"/>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--=== filters ===-->
	<xs:simpleType name="stype-filter-num">
		<xs:restriction base="xs:NCName">
			<xs:enumeration value="eq"/>
			<xs:enumeration value="ne"/>
			<xs:enumeration value="lt"/>
			<xs:enumeration value="gt"/>
			<xs:enumeration value="le"/>
			<xs:enumeration value="ge"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="stype-filter-string">
		<xs:restriction base="xs:NCName">
			<xs:enumeration value="exact"/>
			<xs:enumeration value="case-insensitive"/>
			<xs:enumeration value="regex"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="type-filter-root"/>
	<xs:group name="filter-group">
		<xs:annotation>
			<xs:appinfo>
				<jxb:property collectionType="java.util.ArrayList"/>
			</xs:appinfo>
		</xs:annotation>
		<xs:choice>
			<xs:element name="filter-and">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="type-filter-root">
							<xs:group ref="filter-group" minOccurs="0" maxOccurs="unbounded"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="filter-or">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="type-filter-root">
							<xs:group ref="filter-group" minOccurs="0" maxOccurs="unbounded"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="filter-not">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="type-filter-root">
							<xs:group ref="filter-group"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="filter-always-true">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="type-filter-root">
							<xs:attribute name="value" type="xs:boolean" use="prohibited" fixed="true"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="filter-always-false">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="type-filter-root">
							<xs:attribute name="value" type="xs:boolean" use="prohibited" fixed="false"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="filter-num-option">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="type-filter-root">
							<xs:attribute name="op" type="stype-filter-num" use="required"/>
							<xs:attribute name="code" type="wByte" use="required"/>
							<xs:attribute name="value-int" type="xs:int" use="required"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="filter-string-option">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="type-filter-root">
							<xs:attribute name="mode" type="stype-filter-string" use="optional" default="exact"/>
							<xs:attribute name="code" type="wByte" use="required"/>
							<xs:attribute name="value-string" type="xs:string" use="required"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:element name="filter">
		<xs:annotation>
			<xs:documentation>Filter to apply to client requests. Requests not satisfying filter are silently ignored.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:group ref="filter-group"/>
		</xs:complexType>
	</xs:element>
	<!--=== node and subnets ===-->
	<xs:complexType name="type-node-subnet">
		<xs:attribute name="comment" type="xs:string" use="optional"/>
		<xs:attribute name="node-type" type="xs:string" use="optional"/>
		<xs:attribute name="node-id" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="type-node">
		<xs:complexContent>
			<xs:extension base="type-node-subnet">
				<xs:all>
					<xs:element name="policy" type="policyType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Policy for the current node or subnet, can be server-wide or local to node</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="sub-nodes" minOccurs="0"/>
				</xs:all>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="type-subnet">
		<xs:complexContent>
			<xs:extension base="type-node-subnet">
				<xs:all>
					<xs:element name="policy" type="policyType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Policy for the current node or subnet, can be server-wide or local to node</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="giaddrs" minOccurs="0"/>
					<xs:element ref="pools" minOccurs="0"/>
				</xs:all>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="node">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="type-node"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="subnet">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="type-subnet">
					<xs:attribute name="address" type="inet-address" use="required"/>
					<xs:attribute name="mask" type="inet-address" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="giaddrs">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="giaddr" type="inet-address"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="pools">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="range">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="empty-type">
								<xs:attribute name="start" type="inet-address" use="required"/>
								<xs:attribute name="end" type="inet-address" use="required"/>
							</xs:extension>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="static">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="empty-type">
								<xs:attribute name="address" type="inet-address" use="required"/>
								<xs:attribute name="ethernet" type="xs:string" use="optional"/>
							</xs:extension>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="sub-nodes">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="node"/>
				<xs:element ref="subnet"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="optionsType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:annotation>
				<xs:appinfo>
					<jxb:property name="options"/>
				</xs:appinfo>
			</xs:annotation>
			<xs:element ref="option"/>
			<xs:group ref="group-option-inets"/>
			<xs:group ref="group-option-inet"/>
			<xs:group ref="group-option-bytes"/>
			<xs:group ref="group-option-byte"/>
			<xs:group ref="group-option-int"/>
			<xs:group ref="group-option-short"/>
			<xs:group ref="group-option-shorts"/>
			<xs:group ref="group-option-string"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="policyType">
		<xs:all>
			<xs:element ref="filter" minOccurs="0"/>
			<xs:element ref="options" minOccurs="0"/>
			<xs:element name="post-options" type="optionsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of options to append after all other options (used for rare cases)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="lease-time" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specify lease times (in seconds)</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="lease_default" use="optional">
						<xs:annotation>
							<xs:documentation>Default lease time (in seconds)</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:int">
								<xs:minInclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="lease-max" use="optional">
						<xs:annotation>
							<xs:documentation>Max lease time accepted for client (in seconds). It should be greater or aquel than 'lease-default', It defauls to 'lease-default'</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:int">
								<xs:minInclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:all>
	</xs:complexType>
</xs:schema>
